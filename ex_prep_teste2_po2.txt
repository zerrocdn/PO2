1.

Altere o método "positionSelected" na classe Model de forma que cada posição fique com um valor aleatório entre 0 e o máximo indicado previamente.

Para indicar o valor máximo possível, deve definir um método na classe Model com a assinatura setMaximum void(int max)".

Defina um método com o nome "resetIfSmall" na classe Model que recebe um parâmetro do tipo Position. Se nessa posição o valor na célula for inferior a dois ou mais dos valores nas quatro células adjacentes em diagonal (nos quatro cantos) o valor da célula deve passar a zero. Por exemplo, se na posição clicada estiver o valor 3 e nas posições nos cantos estiverem os valores 2, 1, 4 e 5, a posição 3 deve passar a ter o valor 0 porque 4 e 5 são maiores do que 3.

Teste o "resetIfSmall" com um método de teste e vários exemplos. Deve testar se funciona nos quatro cantos do tabuleiro.

Adicione a possibilidade de na interface gráfica executar o método "resetIfSmall"  e actualizar o tabuleiro.



-----------------------------------------------------------------------------------------------------------

2.

Utilize o método "positionSelected" na classe Model já alterado de forma que cada posição fique com um valor aleatório entre 0 e o máximo indicado previamente.

Defina um método "List<Position> near(Position pos)"  que devolve a lista das posições ligadas à posição pos. Uma posição está ligada à posição pos (com o valor vpos) se estiver numa das 8 posições justapostas de pos e contiver um valor vconnected, tal que Math.abs(vconected - vpos) < = 1. 

Considere agora que uma posição também está ligada a pos se estiver ligada a uma terceira posição ligada a pos.

Última alteração: Tuesday, 14 May 2019, 14:56

